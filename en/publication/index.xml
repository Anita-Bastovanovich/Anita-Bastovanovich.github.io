<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Публикации | My Site</title>
    <link>https://anita-bastovanovich.github.io/en/publication/</link>
      <atom:link href="https://anita-bastovanovich.github.io/en/publication/index.xml" rel="self" type="application/rss+xml" />
    <description>Публикации</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Tue, 03 Jun 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://anita-bastovanovich.github.io/media/icon_hu_645fa481986063ef.png</url>
      <title>Публикации</title>
      <link>https://anita-bastovanovich.github.io/en/publication/</link>
    </image>
    
    <item>
      <title>Digital Hygiene</title>
      <link>https://anita-bastovanovich.github.io/en/publication/05/</link>
      <pubDate>Tue, 03 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://anita-bastovanovich.github.io/en/publication/05/</guid>
      <description>&lt;h1 id=&#34;-digital-hygiene-how-to-stay-focused-in-a-world-of-distractions&#34;&gt;🌿 Digital Hygiene: How to Stay Focused in a World of Distractions&lt;/h1&gt;
&lt;p&gt;We live in an age of endless notifications, algorithms, podcasts, stories, and calls. The digital environment gives us unlimited access to information — and, at the same time, it brings distraction, anxiety, and fatigue. To maintain mental clarity and productivity, it&amp;rsquo;s essential to develop strong &lt;strong&gt;digital hygiene&lt;/strong&gt; habits.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-what-is-digital-hygiene&#34;&gt;🧠 What Is Digital Hygiene?&lt;/h2&gt;
&lt;p&gt;Digital hygiene is the conscious management of your attention and time in a tech-saturated world. It includes habits and principles that help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;minimize informational noise,&lt;/li&gt;
&lt;li&gt;avoid digital addiction,&lt;/li&gt;
&lt;li&gt;maintain productivity and mental well-being.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-why-does-it-matter&#34;&gt;🔄 Why Does It Matter?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;📵 On average, we check our smartphones 58 times a day.&lt;/li&gt;
&lt;li&gt;📉 Constant task-switching lowers focus and slows thinking.&lt;/li&gt;
&lt;li&gt;🧠 Chronic information overload affects sleep, learning, and memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-core-principles-of-digital-hygiene&#34;&gt;📋 Core Principles of Digital Hygiene&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mindful Information Consumption&lt;/strong&gt;&lt;br&gt;
Don&amp;rsquo;t scroll — choose. Subscriptions, feeds, and channels should align with your goals and interests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Notification Management&lt;/strong&gt;&lt;br&gt;
Disable push notifications for apps that don’t require urgent action. Not every pop-up is worth your attention.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Digital Detox&lt;/strong&gt;&lt;br&gt;
Take regular breaks from screens — whether it’s two hours in the evening or a tech-free weekend.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Focused Device Use&lt;/strong&gt;&lt;br&gt;
Follow the &amp;ldquo;one task — one screen&amp;rdquo; rule. Close unnecessary tabs and avoid distracting background media.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Screen Time Awareness&lt;/strong&gt;&lt;br&gt;
Set limits on social media and games. Apps can remind you when it’s time to stop.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-how-to-apply-this-in-daily-life&#34;&gt;🧘‍♀️ How to Apply This in Daily Life&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Before bed — &lt;strong&gt;quiet mode&lt;/strong&gt;: avoid phone use at least 30 minutes before sleep.&lt;/li&gt;
&lt;li&gt;Mornings — &lt;strong&gt;screen-free start&lt;/strong&gt;: begin your day with breathing, stretching, or journaling — not news feeds.&lt;/li&gt;
&lt;li&gt;Studying — &lt;strong&gt;timed sessions&lt;/strong&gt;: 25 minutes of focus, 5 minutes of rest (Pomodoro method).&lt;/li&gt;
&lt;li&gt;Feeling overwhelmed? &lt;strong&gt;Audit your time&lt;/strong&gt;: check which apps consume most of your energy.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-conclusion&#34;&gt;📌 Conclusion&lt;/h2&gt;
&lt;p&gt;Digital hygiene isn’t about rejecting technology — it’s about using it &lt;strong&gt;consciously&lt;/strong&gt;. It’s the balance between external noise and internal attention.&lt;/p&gt;
&lt;p&gt;The better we manage our focus, the more effectively we learn, work, rest, and grow. In a world where attention is currency, mastering it is a core skill for the 21st century. 🌱&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scientific Programming Languages</title>
      <link>https://anita-bastovanovich.github.io/en/publication/04/</link>
      <pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate>
      <guid>https://anita-bastovanovich.github.io/en/publication/04/</guid>
      <description>&lt;h1 id=&#34;-scientific-programming-languages-from-theory-to-computation&#34;&gt;💻 Scientific Programming Languages: From Theory to Computation&lt;/h1&gt;
&lt;p&gt;Scientific programming is a domain where programming directly serves research goals: modeling, simulation, data analysis, and result visualization. From physics and bioinformatics to economics and machine learning — wherever there are data, formulas, and algorithms, specialized languages are in use.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-what-is-scientific-programming&#34;&gt;🧠 What Is Scientific Programming?&lt;/h2&gt;
&lt;p&gt;It’s the process of writing programs to solve problems encountered in scientific research. These programs simulate system behavior, perform numerical experiments, process large datasets, or visualize patterns.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-key-features-of-scientific-programming-languages&#34;&gt;🧰 Key Features of Scientific Programming Languages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;High precision for floating-point numbers&lt;/li&gt;
&lt;li&gt;Optimized libraries for linear algebra, statistics, and equations&lt;/li&gt;
&lt;li&gt;Integration with data visualization and analysis tools&lt;/li&gt;
&lt;li&gt;Support for arrays, matrices, and tensors&lt;/li&gt;
&lt;li&gt;Ability to parallelize and accelerate computations automatically&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-popular-languages-in-the-scientific-community&#34;&gt;🔍 Popular Languages in the Scientific Community&lt;/h2&gt;
&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;
&lt;p&gt;A universal and beginner-friendly language with powerful libraries: NumPy, SciPy, Matplotlib, Pandas, TensorFlow. Ideal for data analysis, modeling, and machine learning.&lt;/p&gt;
&lt;h3 id=&#34;r&#34;&gt;R&lt;/h3&gt;
&lt;p&gt;Specialized in statistics and visualization. Widely used in biostatistics, econometrics, and the social sciences.&lt;/p&gt;
&lt;h3 id=&#34;matlab&#34;&gt;MATLAB&lt;/h3&gt;
&lt;p&gt;Used for numerical analysis, signal processing, and control systems. Common in engineering and applied mathematics.&lt;/p&gt;
&lt;h3 id=&#34;julia&#34;&gt;Julia&lt;/h3&gt;
&lt;p&gt;A modern language that combines the speed of C with Python-like syntax. Suitable for high-performance computing and scientific simulations.&lt;/p&gt;
&lt;h3 id=&#34;fortran&#34;&gt;Fortran&lt;/h3&gt;
&lt;p&gt;One of the oldest languages, still widely used in physics, meteorology, and numerical methods. Known for its speed.&lt;/p&gt;
&lt;h3 id=&#34;cc&#34;&gt;C/C++&lt;/h3&gt;
&lt;p&gt;Used for building performance-intensive libraries, simulations, and systems-level programming.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-applications&#34;&gt;🌍 Applications&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;📊 Data processing and analysis in life sciences, climate research, and sociology&lt;/li&gt;
&lt;li&gt;🧮 Modeling physical and chemical processes&lt;/li&gt;
&lt;li&gt;🔬 Image and signal processing&lt;/li&gt;
&lt;li&gt;🌐 Artificial intelligence and deep learning&lt;/li&gt;
&lt;li&gt;🚀 Aerospace simulations and trajectory calculations&lt;/li&gt;
&lt;li&gt;🧬 Genetic algorithms and evolutionary modeling&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-choosing-the-right-language&#34;&gt;🔄 Choosing the Right Language&lt;/h2&gt;
&lt;p&gt;There is no “best” language — the choice depends on the task:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Domain&lt;/th&gt;
          &lt;th&gt;Recommended Languages&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Statistics and visualization&lt;/td&gt;
          &lt;td&gt;R, Python&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Numerical methods&lt;/td&gt;
          &lt;td&gt;MATLAB, Julia, Fortran&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Machine learning&lt;/td&gt;
          &lt;td&gt;Python, Julia&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;High-performance computing&lt;/td&gt;
          &lt;td&gt;C++, Fortran, Julia&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Rapid prototyping&lt;/td&gt;
          &lt;td&gt;Python, MATLAB&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-important-notes&#34;&gt;🧩 Important Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A language is just a tool. Understanding the problem and methods is more important than syntax.&lt;/li&gt;
&lt;li&gt;Most real-world projects use a &lt;strong&gt;combination of languages&lt;/strong&gt; — for example, Python for analysis and C++ for speed.&lt;/li&gt;
&lt;li&gt;Scientific programming skills are increasingly in demand — in both academia and industry.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-conclusion&#34;&gt;🧠 Conclusion&lt;/h2&gt;
&lt;p&gt;Scientific programming languages are the bridge between abstract theory and real-world computation. They enable scientists, engineers, and analysts to explore complex systems, make predictions, and uncover patterns in data.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re aiming to work on the science of tomorrow, mastering at least one of these languages is not optional — it&amp;rsquo;s essential. 🚀&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating Presentations</title>
      <link>https://anita-bastovanovich.github.io/en/publication/03/</link>
      <pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate>
      <guid>https://anita-bastovanovich.github.io/en/publication/03/</guid>
      <description>&lt;h1 id=&#34;-creating-presentations-how-to-communicate-your-idea-effectively&#34;&gt;🎤 Creating Presentations: How to Communicate Your Idea Effectively&lt;/h1&gt;
&lt;p&gt;A presentation is a tool for sharing ideas, showcasing projects, and persuading your audience. A great presentation combines a clear structure, visual appeal, and a confident delivery.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-why-do-we-need-presentations&#34;&gt;📋 Why Do We Need Presentations?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To &lt;strong&gt;communicate an idea&lt;/strong&gt; concisely and clearly&lt;/li&gt;
&lt;li&gt;To &lt;strong&gt;support your speech&lt;/strong&gt; and highlight key points&lt;/li&gt;
&lt;li&gt;To &lt;strong&gt;visualize data&lt;/strong&gt;, processes, or structures&lt;/li&gt;
&lt;li&gt;To &lt;strong&gt;persuade the audience&lt;/strong&gt; — whether it&amp;rsquo;s investors, instructors, or colleagues&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-structure-of-an-effective-presentation&#34;&gt;🧱 Structure of an Effective Presentation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br&gt;
Briefly outline the topic, goals, and relevance. Set the tone for the rest of the presentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Main Body&lt;/strong&gt;&lt;br&gt;
Present the problem, methods, solutions, and results. Each idea deserves its own slide or section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Summarize key points and offer insights or suggestions. Add a &amp;ldquo;Thank You&amp;rdquo; or contact slide.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-visual-design-guidelines&#34;&gt;🎨 Visual Design Guidelines&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Use a &lt;strong&gt;consistent design&lt;/strong&gt; — fonts, colors, icons&lt;/li&gt;
&lt;li&gt;Avoid clutter: &lt;strong&gt;one idea per slide&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Replace text with visuals: &lt;strong&gt;charts, diagrams, and images&lt;/strong&gt; work better&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;contrast&lt;/strong&gt; to emphasize key information&lt;/li&gt;
&lt;li&gt;Follow &lt;strong&gt;text hierarchy&lt;/strong&gt;: titles, subtitles, bullet points&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-principles-of-a-great-presentation&#34;&gt;🧠 Principles of a Great Presentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Brevity&lt;/strong&gt;: Don’t overload slides with text. Speak rather than read aloud.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logical flow&lt;/strong&gt;: Each slide should lead naturally to the next.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Focus&lt;/strong&gt;: Stay on topic and keep the audience engaged.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visual enhancement&lt;/strong&gt;: Use graphics only if they support your message.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Practice&lt;/strong&gt;: Even the best slides need confident delivery.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-tools&#34;&gt;🧰 Tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PowerPoint&lt;/strong&gt; — the classic choice for most users&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google Slides&lt;/strong&gt; — ideal for collaborative online editing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Canva&lt;/strong&gt; — pre-designed templates with creative flair&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LaTeX (Beamer)&lt;/strong&gt; — for structured academic presentations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Figma, Keynote, Prezi&lt;/strong&gt; — for more creative and dynamic formats&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-preparation-tips&#34;&gt;🎯 Preparation Tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Carefully &lt;strong&gt;plan your storyline&lt;/strong&gt;: what, why, and for whom&lt;/li&gt;
&lt;li&gt;Make your presentation a &lt;strong&gt;visual guide&lt;/strong&gt;, not a script&lt;/li&gt;
&lt;li&gt;Rehearse your delivery: &lt;strong&gt;voice, gestures, and pauses&lt;/strong&gt; all matter&lt;/li&gt;
&lt;li&gt;Leave time for &lt;strong&gt;questions and feedback&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Keep a &lt;strong&gt;backup copy&lt;/strong&gt; in PDF format&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-conclusion&#34;&gt;📌 Conclusion&lt;/h2&gt;
&lt;p&gt;A good presentation isn’t just about slides — it’s a thoughtfully designed way to communicate your message to the audience. It should be clear, structured, and visually engaging.&lt;/p&gt;
&lt;p&gt;And remember: the most important part of your presentation isn’t the slides — it’s &lt;strong&gt;you and your story&lt;/strong&gt;. 🧭&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Markup Languages and LaTeX</title>
      <link>https://anita-bastovanovich.github.io/en/publication/02/</link>
      <pubDate>Wed, 07 May 2025 00:00:00 +0000</pubDate>
      <guid>https://anita-bastovanovich.github.io/en/publication/02/</guid>
      <description>&lt;h1 id=&#34;-markup-languages-and-latex&#34;&gt;✍️ Markup Languages and LaTeX&lt;/h1&gt;
&lt;p&gt;Markup is a way of structuring text using special symbols. It not only defines how text is displayed but also adds semantic structure to the document. Markup languages are widely used in web development, academia, and technical documentation.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-what-is-a-markup-language&#34;&gt;🌐 What Is a Markup Language?&lt;/h2&gt;
&lt;p&gt;A markup language allows you to add extra information to text — such as whether a phrase is a heading, quote, piece of code, or a formula. Unlike traditional word processors, markup separates &lt;strong&gt;structure&lt;/strong&gt; and &lt;strong&gt;content&lt;/strong&gt; from &lt;strong&gt;presentation&lt;/strong&gt;. This makes documents more flexible, portable, and suitable for automated processing.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-types-of-markup-languages&#34;&gt;📚 Types of Markup Languages&lt;/h2&gt;
&lt;p&gt;Some of the most common markup languages include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTML&lt;/strong&gt; — used to structure web pages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Markdown&lt;/strong&gt; — popular for blogs, documentation, and version control systems&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;reStructuredText&lt;/strong&gt; — commonly used in the Python community for technical docs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LaTeX&lt;/strong&gt; — a standard tool for formatting scientific and technical documents&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-what-is-latex&#34;&gt;🧪 What Is LaTeX?&lt;/h2&gt;
&lt;p&gt;LaTeX is a powerful markup system developed for formatting scientific texts, formulas, reports, articles, and theses. It is especially popular among students, engineers, mathematicians, and physicists due to its robust support for mathematical notation, references, and bibliographies.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-why-is-latex-so-popular&#34;&gt;📐 Why Is LaTeX So Popular?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Perfect for formulas.&lt;/strong&gt; No other language provides the same level of precision and flexibility for writing complex mathematical expressions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clear document structure.&lt;/strong&gt; Automatic generation of tables of contents, lists, footnotes, and references makes it a powerful academic writing tool.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full control over style.&lt;/strong&gt; LaTeX allows for precise customization of formatting to meet journal, university, or GOST standards.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compatibility and longevity.&lt;/strong&gt; LaTeX files are plain text and editable in any editor — and they can last for decades.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automation.&lt;/strong&gt; Tables, plots, formulas, and even presentations can be generated programmatically — ideal for reports and research documentation.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-where-is-latex-used&#34;&gt;🧑‍🎓 Where Is LaTeX Used?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Writing coursework, theses, and dissertations&lt;/li&gt;
&lt;li&gt;Preparing scientific articles&lt;/li&gt;
&lt;li&gt;Compiling research and grant reports&lt;/li&gt;
&lt;li&gt;Formatting technical manuals and presentations&lt;/li&gt;
&lt;li&gt;Creating CVs and formal documents&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-conclusion&#34;&gt;🧠 Conclusion&lt;/h2&gt;
&lt;p&gt;LaTeX is more than just a language — it&amp;rsquo;s a whole philosophy of document preparation: strict structure, professional output, and powerful formatting tools. It takes time to learn, but the results are worth it — especially if you work in science, analytics, or engineering.&lt;/p&gt;
&lt;p&gt;If you want your documents to look academic and flawless, LaTeX will be your indispensable ally. 💡&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Continuous Integration and Continuous Deployment</title>
      <link>https://anita-bastovanovich.github.io/en/publication/01/</link>
      <pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate>
      <guid>https://anita-bastovanovich.github.io/en/publication/01/</guid>
      <description>&lt;h1 id=&#34;-continuous-integration-and-continuous-deployment-cicd&#34;&gt;🚀 Continuous Integration and Continuous Deployment (CI/CD)&lt;/h1&gt;
&lt;p&gt;In today’s software development landscape, teams strive to deliver high-quality products as quickly and frequently as possible. To achieve this, they use &lt;strong&gt;Continuous Integration (CI)&lt;/strong&gt; and &lt;strong&gt;Continuous Deployment/Delivery (CD)&lt;/strong&gt; — practices combined under the term &lt;strong&gt;CI/CD&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-what-is-cicd&#34;&gt;🧱 What Is CI/CD?&lt;/h2&gt;
&lt;h3 id=&#34;ci-continuous-integration&#34;&gt;CI (Continuous Integration)&lt;/h3&gt;
&lt;p&gt;CI means that code changes (commits) are regularly integrated into the main repository branch. After each commit, a chain of automated checks is triggered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project compilation and build&lt;/li&gt;
&lt;li&gt;Unit and integration testing&lt;/li&gt;
&lt;li&gt;Code style and quality verification&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This way, the team immediately learns whether a new change breaks the system.&lt;/p&gt;
&lt;h3 id=&#34;cd-continuous-delivery--continuous-deployment&#34;&gt;CD (Continuous Delivery / Continuous Deployment)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Continuous Delivery&lt;/strong&gt; is the automated delivery of a tested build to a staging environment. A person then decides whether to release it to production.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Continuous Deployment&lt;/strong&gt; takes it further: changes are deployed to production &lt;strong&gt;automatically&lt;/strong&gt; after successfully passing all pipeline stages — no manual steps required.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-why-use-cicd&#34;&gt;🔧 Why Use CI/CD?&lt;/h2&gt;
&lt;p&gt;CI/CD helps to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⚡ Accelerate feature delivery to users&lt;/li&gt;
&lt;li&gt;🔍 Quickly detect and fix bugs&lt;/li&gt;
&lt;li&gt;🔁 Reduce release risks with smaller, more frequent updates&lt;/li&gt;
&lt;li&gt;👩‍💻 Improve collaboration between developers, testers, and DevOps engineers&lt;/li&gt;
&lt;li&gt;📉 Minimize manual work and human error&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-how-does-a-cicd-pipeline-work&#34;&gt;🔄 How Does a CI/CD Pipeline Work?&lt;/h2&gt;
&lt;p&gt;A typical &lt;strong&gt;CI/CD pipeline&lt;/strong&gt; includes the following stages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Fetch code from the repository&lt;/strong&gt; (e.g., GitHub, GitLab)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Build the project&lt;/strong&gt; — generate executables or artifacts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Run tests&lt;/strong&gt; — execute automated tests&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Quality analysis&lt;/strong&gt; — linters, code coverage checks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Build Docker image&lt;/strong&gt; — if containerization is used&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy&lt;/strong&gt; — deliver the app to a server, cloud, or Kubernetes cluster&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-popular-cicd-tools&#34;&gt;⚙️ Popular CI/CD Tools&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Tool&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;GitHub Actions&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Integrated into GitHub, easily configured via YAML&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;GitLab CI/CD&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;A powerful built-in automation system for GitLab&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Jenkins&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;One of the most flexible and customizable tools&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;CircleCI&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Well-suited for cloud-based CI/CD pipelines&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Travis CI&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Popular in the open-source community&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-sample-github-actions-configuration&#34;&gt;🛡 Sample GitHub Actions Configuration&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CI Pipeline&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build-and-test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout code&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Set up Python&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/setup-python@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;python-version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;3.10&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Install dependencies&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pip install -r requirements.txt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Run tests&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pytest tests/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
